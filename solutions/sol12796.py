import sys

input = sys.stdin.readline


# 12796 나의 행렬곱셈 답사기
# a * b 와 b * c 크기의 행렬을 곱할 때 정수곱셈의 횟수는 a * b * c회
# 행렬 n개를 곱하는 연산에서 연산 순서를 어떻게 하냐에 따라 정수 곱셈의 횟수가 달라짐
# 행렬 곱셈에 필요한 총 정수 곱셈 횟수의 최댓값과 최솟값의 차가 k가 되도록 할 수 있는 케이스를 하나 구하는 문제
def sol12796():
    k = int(input())

    # (1 * 1), (1 * 1), (1 * X) 세 행렬을 곱하는 연산은
    # 항상 최대 곱셈횟수가 2 * X 이며 최소 곱셈횟수가 X + 1 이 된다.
    # 즉, 최대, 최소 곱셈횟수의 차가 X - 1이 되므로
    # (1 * 1), (1 * 1), (1 * (k + 1)) 의 세 행렬을 곱하면 최대, 최소 곱셈 횟수의 차는 k가 된다.
    return '\n'.join(['3', ' '.join(map(str, [1, 1, 1, k + 1]))])
