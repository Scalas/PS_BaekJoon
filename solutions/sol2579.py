import sys

input = sys.stdin.read


# 2579 계단오르기
# 규칙에 따라 계단을 올랐을 때 마지막 계단에서 점수의 합의 최댓값을 찾는 문제
# 1. 계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서
#    다음 계단이나, 다음 다음 계단으로 오를 수 있다.
# 2. 연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
# 3. 마지막 도착 계단은 반드시 밟아야 한다.


# n번째 계단에 오를 수 있는 경우의 수
# 1. n-2 번째 계단에서 2칸 뛰기
# 2. n-3 번째 계단에서 n-1 번째 계단으로 2칸 뛴 후 한 칸 더 뛰기
# 2 번째 계단까지 계산해준 뒤 나머지는 위 두 가지 경우중 최솟값을 더해주면 해결 가능
def sol2579():
    n, *stairs = map(int, input().split())
    if n < 3:
        print(sum(stairs))
        return

    dp = [0, *stairs]
    dp[2] = dp[1] + dp[2]
    for i in range(3, n + 1):
        dp[i] += max(dp[i - 2], dp[i - 3] + stairs[i - 2])

    print(dp[n])
