import sys

input = sys.stdin.readline


# 1947 선물 전달
# n명의 학생이 서로 자신의 선물을 받지않도록 선물을 교환하는 경우의 수를 구하는 문제
def sol1947():
    n = int(input())

    # 혼자서는 선물 교환이 불가능
    if n == 1:
        return 0

    # 이전단계와 현재단계의 경우의 수만을 기억
    p, c = 0, 1
    idx = 2
    for i in range(n-2):
        # 학생수가 i일 때 자신의 선물을 받지 않도록 교환하는 경우의 수는

        # 1. i-1일 때 교환하는 경우에서(dp[i-1]) 새로 추가된 한명의 선물을 교환이
        #    끝난 i-1명중 누군가와 교환하는(i-1) 경우의 수 즉, dp[i-1] * (i-1)
        # 2. i-1일 때 1명이 자신의 선물을 받고 나머진 교환이 끝난 상태에서(dp[i-2])
        #    새로 추가된 한명의 선물을 자신의 선물을 받은 학생과 교환하는(1) 경우의 수
        #    자신의 선물을 받은 학생이 될 수 있는 학생의 수는 i-1 이기 때문에
        #    dp[i-2] * 1 * (i-1) 이 된다.
        # 그러므로 dp[i] = dp[i-1] * (i-1) + dp[i-2] * (i-1) = (dp[i-1] + dp[i-2]) * (i-1)
        p, c = c, ((p + c) * idx) % 1000000000
        idx += 1
    return c
