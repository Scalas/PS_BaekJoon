import sys

input = sys.stdin.readline


# 2602 돌다리 건너기
# 마법의 스크롤에 적힌 문자열과
# 같은길이의 다리 두개(악마의 다리, 천사의 다리)의 각 칸의 문자가 주어졌을 때
# 다음 조건에 따라 이동하는 모든 경우의 수를 구하는 문제
# 1. 반드시 두 다리를 번갈아가며 건너야한다
# 2. 매 이동마다 한칸 이상 오른쪽으로 이동해야한다
# 3. 스크롤의 모든 문자를 순서대로 밟아야 한다
def sol2602():
    f, *scroll = input().rstrip()
    bridge = [list(input().rstrip()) for _ in range(2)]
    n = len(bridge[0])
    dp = [[0] * (n+1) for _ in range(2)]

    # 스크롤의 첫 문자의 갯수를 카운트
    for i in range(n):
        dp[0][i] = dp[0][i-1]
        dp[1][i] = dp[1][i-1]
        if bridge[0][i] == f:
            dp[0][i] += 1
        if bridge[1][i] == f:
            dp[1][i] += 1

    # 스크롤의 문자를 순서대로 밟아나가며 경우의 수를 탐색
    for c in scroll:
        ndp = [[0] * (n+1) for _ in range(2)]
        for i in range(n):
            # 스크롤의 이전 문자까지의 문자열을 밟을 수 있었던 경우의 수
            ndp[0][i] = ndp[0][i-1]
            ndp[1][i] = ndp[1][i-1]

            # 현재 칸까지 스크롤의 현재 문자까지의 문자열을 밟는데 성공한 갯수는
            # 이전 칸까지 스크롤의 현재 문자까지의 문자열을 밟는데 성공한 갯수 + 이번 칸에서 추가로 성공한 갯수

            # 악마의 다리의 현재 문자가 마법의 두루마리의 현재 문자와 일치할 경우
            if bridge[0][i] == c:
                ndp[0][i] += dp[1][i-1]

            # 천사의 다리의 현재 문자가 마법의 두루마리의 현재 문자와 일치할 경우
            if bridge[1][i] == c:
                ndp[1][i] += dp[0][i-1]
        dp = ndp

    # 모든 문자열을 밟아나간 뒤 마지막 칸까지 성공한 갯수를 더하여 반환(천사의 다리를 마지막으로 밟은경우 + 악마의 다리를 마지막으로 밟은 경우)
    return dp[0][-2] + dp[1][-2]
