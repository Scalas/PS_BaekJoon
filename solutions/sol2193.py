import sys

input = sys.stdin.readline


# 2193 이친수
# 이진수 중에서 0으로 시작하지 않으며 1이 두번이상 연속으로 나타나지 않는 수를 이친수라 할 때
# n 자리의 이친수의 갯수를 구하는 문제
# n-1 자리의 이친수에 0 또는 1을 붙여 만들되, 1로 끝나는 수에는 1을 붙여 만들 수 없다.
# dp[n] 이 n자리의 이친수 중 0으로 끝나는 수의 갯수와 1로 끝나는 수의 갯수로 이루어진 리스트라고 할 때,
# dp[n] = [dp[n-1][0] + dp[n-1][1] , dp[n-1][0]] 이 된다.
# 이를 이용하여 동적계획법으로 문제를 해결할 수 있다.
def sol2193():
    n = int(input())
    dp = [[0, 0] for _ in range(n + 1)]
    dp[1] = [0, 1]
    for i in range(2, n + 1):
        dp[i] = [sum(dp[i - 1]), dp[i - 1][0]]

    return sum(dp[n])
