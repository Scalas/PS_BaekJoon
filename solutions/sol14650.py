import sys

input = sys.stdin.readline


# 14650 걷다보니 신천역 삼(Small)
# 0, 1, 2만으로 이루어진 n자리 숫자중 3의 배수의 갯수를 구하는 문제
# 단, 숫자는 0으로 시작할 수 없다
def sol14650():
    n = int(input())
    # 모든 자리수를 더해서 3의배수라면 그 수는 3의배수
    # 자릿수를 더한 값을 3으로 나눈 나머지가 0, 1, 2인 수의 i자리 수의 갯수를
    # dp[i][0], dp[i][1], dp[i][2] 라고 할 때
    # 나머지가 0인 경우는 나머지가 0인 수에 0을, 1인 수에 2를, 2인 수에 1을 붙여 만드는 세가지 경우
    # 나머지가 1인경우, 2인 경우도 마찬가지로 각 경우의 수에서 모두 파생될 수 있기 때문에
    # dp[i+1] = [sum(dp[i]), sum(dp[i]), sum(dp[i])] 가 성립한다
    # 0으로 시작할 수 없기 때문에 나머지가 0인 수의 갯수가 0인 한자리 수를 제외하면
    # i자리 수의 나머지가 0, 1, 2인 수는 모두 같으며
    # i+1자리의 수가 되면 그 값은 모두 이전 자리수에서의 값의 3배가 된다.
    if n == 1:
        return 0
    return 2 * (3 ** (n-2))
