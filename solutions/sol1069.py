import sys

input = sys.stdin.read


# 1069 집으로
# 주어진 좌표에서 원점으로 이동하는 최단시간을 구하는 문제
def sol1069():
    # 시작좌표 x, y와 점프거리/소요시간
    x, y, d, t = map(int, input().split())

    # 집까지의 거리
    l = (x ** 2 + y ** 2) ** .5

    # 점프가 걷기보다 비효율적이거나 걸어서 점프 한번에 걸리는 시간보다 빨리 도착할 수 있을 경우
    # 점프를 하지 않음
    if d <= t or l <= t:
        return l

    # 점프 횟수
    j = 0

    # 점프거리의 2배
    dj = 2 * d

    # 집까지 남은 거리가 dj 보다 크다면
    # 점프횟수 증가, 점프거리만큼 남은거리 감소
    while l > dj:
        j += 1
        l -= d

    # 지금까지의 점프횟수 * 점프시간에
    # 남은거리를 점프 두번으로 이동하는 경우, 한번 점프한 후 남은 거리를 걸어서 이동하는 경우,
    # 점프를 하지 않고 걸어서 이동하는 경우 중 최솟값을 더하여 반환
    res = j * t + min(2 * t, l, t + abs(l - d))
    return res

